import random
from pathlib import Path

from aiogram import Router, F
from aiogram.types import CallbackQuery

from bot.config import settings
from bot.utils import setup_logger

logger = setup_logger(__name__)
router = Router()


async def get_random_username() -> str | None:
    """–ü–æ–ª—É—á–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π username –∏–∑ —Ñ–∞–π–ª–∞"""
    try:
        path = Path("resources/nicknames")
        if not path.exists():
            logger.error("Username file not found")
            return None

        with open(path, 'r') as file:
            usernames = [line.strip() for line in file if line.strip()]
            if not usernames:
                logger.warning("No usernames available in file")
                return None
            return random.choice(usernames)
    except Exception as e:
        logger.error(f"Error reading usernames file: {e}")
        return None


@router.callback_query(F.data == "generate_username")
async def handle_generate_username(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ username"""
    username = await get_random_username()

    if not username:
        await callback.message.answer(
            "‚ùå –í—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∏–º–µ–Ω–∞ –±–æ—Ç–æ–≤ –∑–∞–Ω—è—Ç—ã.\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤."
        )

        # –õ–æ–≥–∏—Ä—É–µ–º –ø—Ä–æ–±–ª–µ–º—É –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        logger.warning(
            f"User {callback.from_user.id} requested username but none available"
        )

        # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º
        if settings.tg.admin_ids:
            for admin_id in settings.tg.admin_ids:
                await callback.bot.send_message(
                    admin_id,
                    f"‚ö†Ô∏è –ó–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –∏–º–µ–Ω–∞ –¥–ª—è –±–æ—Ç–æ–≤! –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {callback.from_user.id} –∑–∞–ø—Ä–æ—Å–∏–ª –∏–º—è."
                )
    else:
        await callback.message.answer(
            "üé≤ <b>–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω username –¥–ª—è –±–æ—Ç–∞:</b>\n\n"
            f"<code>@{username}</code>\n\n"
            "üìå <b>–ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å –±–æ—Ç–∞ –∏ –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω:</b>\n"
            "1. –ù–∞–π—Ç–∏ –≤ Telegram <a href='https://t.me/BotFather'>@BotFather</a>\n"
            "2. –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—É <code>/newbot</code>\n"
            f"3. –í–≤–µ—Å—Ç–∏ –∏–º—è –±–æ—Ç–∞ ({username})\n"
            f"4. –í–≤–µ—Å—Ç–∏ username: <code>@{username}</code>\n"
            "5. –ü–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞\n\n"
            "üé• <a href='https://www.youtube.com/shorts/miiZ_wSaA0g'>–í–∏–¥–µ–æ-–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è</a>\n\n"
            "üîë <b>–ü–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞:</b>\n"
            "<i>–§–æ—Ä–º–∞—Ç(–ü—Ä–∏–º–µ—Ä):</i> <code>1234567890:ABCdefGHIjklMnOpQRStuVWXYz</code>",
            parse_mode="HTML",
            disable_web_page_preview=True
        )

    await callback.answer()
