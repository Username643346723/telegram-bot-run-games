"""empty message

Revision ID: 8a5ca496e47a
Revises:
Create Date: 2025-06-18 23:19:58.403105

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "8a5ca496e47a"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column(
            "id",
            sa.BigInteger(),
            autoincrement=False,
            nullable=False,
            comment="Telegram user ID",
        ),
        sa.Column(
            "full_name",
            sa.String(length=128),
            nullable=True,
            comment="Полное имя пользователя",
        ),
        sa.Column(
            "username",
            sa.String(length=32),
            nullable=True,
            comment="Username пользователя (@ без @)",
        ),
        sa.Column(
            "language_code",
            sa.String(length=8),
            nullable=True,
            comment="Код языка пользователя",
        ),
        sa.Column(
            "is_blocked",
            sa.Boolean(),
            server_default="false",
            nullable=False,
            comment="Заблокировал ли пользователь бота",
        ),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        comment="Пользователи, которые взаимодействовали с ботом",
    )
    op.create_table(
        "bot_tokens",
        sa.Column(
            "id",
            sa.BigInteger(),
            autoincrement=True,
            nullable=False,
            comment="Уникальный идентификатор записи",
        ),
        sa.Column(
            "bot_id",
            sa.BigInteger(),
            nullable=True,
            comment="ID бота, полученный из getMe",
        ),
        sa.Column(
            "token",
            sa.String(length=100),
            nullable=False,
            comment="Токен бота Telegram (частично скрывается при выводе)",
        ),
        sa.Column(
            "is_active",
            sa.Boolean(),
            server_default="false",
            nullable=False,
            comment="Флаг активности токена (прошел ли проверку)",
        ),
        sa.Column(
            "bot_name",
            sa.String(length=64),
            nullable=True,
            comment="Название бота, полученное из getMe",
        ),
        sa.Column(
            "bot_username",
            sa.String(length=32),
            nullable=True,
            comment="Юзернейм бота (без @)",
        ),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
            comment="Дата и время добавления токена",
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
            comment="Дата и время последнего обновления записи",
        ),
        sa.Column(
            "last_check_at",
            sa.DateTime(timezone=True),
            nullable=True,
            comment="Дата и время последней проверки токена",
        ),
        sa.Column(
            "check_count",
            sa.Integer(),
            server_default="0",
            nullable=False,
            comment="Количество проведенных проверок токена",
        ),
        sa.Column(
            "is_banned",
            sa.Boolean(),
            server_default="false",
            nullable=False,
            comment="Флаг бана токена (недействителен)",
        ),
        sa.Column(
            "ban_reason",
            sa.String(length=255),
            nullable=True,
            comment="Причина бана токена",
        ),
        sa.Column(
            "user_id",
            sa.BigInteger(),
            nullable=False,
            comment="ID пользователя, который добавил токен",
        ),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("token"),
        comment="Таблица для хранения токенов телеграм ботов и их статусов",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("bot_tokens")
    op.drop_table("users")
    # ### end Alembic commands ###
